{"dependencies":[{"name":"/Users/matt/development/react-state-reducer/package.json","includedInParent":true,"mtime":1519427713816},{"name":"/Users/matt/development/react-state-reducer/.babelrc","includedInParent":true,"mtime":1519427604379},{"name":"/Users/matt/development/react-state-reducer/node_modules/core-js/package.json","includedInParent":true,"mtime":1513021589000},{"name":"./_export","loc":{"line":2,"column":22}}],"generated":{"js":"// http://jfbastien.github.io/papers/Math.signbit.html\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { signbit: function signbit(x) {\n  // eslint-disable-next-line no-self-compare\n  return (x = +x) != x ? x : x == 0 ? 1 / x == Infinity : x > 0;\n} });\n","map":{"mappings":[{"source":"../node_modules/core-js/modules/es7.math.signbit.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/core-js/modules/es7.math.signbit.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/core-js/modules/es7.math.signbit.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/core-js/modules/es7.math.signbit.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/core-js/modules/es7.math.signbit.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/core-js/modules/es7.math.signbit.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/core-js/modules/es7.math.signbit.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/core-js/modules/es7.math.signbit.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}}],"sources":{"../node_modules/core-js/modules/es7.math.signbit.js":"// http://jfbastien.github.io/papers/Math.signbit.html\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { signbit: function signbit(x) {\n  // eslint-disable-next-line no-self-compare\n  return (x = +x) != x ? x : x == 0 ? 1 / x == Infinity : x > 0;\n} });\n"},"lineCount":8}},"hash":"e212b62f6c519628cfcdf9dd633a7770","cacheData":{"env":{}}}